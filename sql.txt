CREATE DATABASE gers;

/************************************************************ TABLES RELATED TO USERS ***************************************************/

CREATE TABLE gers.userTrust ( 
  idUserTrust INTEGER NOT NULL AUTO_INCREMENT, 
  description VARCHAR(20) NOT NULL,
  PRIMARY KEY (idUserTrust)
);

CREATE TABLE gers.users ( 
  idUser INTEGER NOT NULL AUTO_INCREMENT, 
  idUserTrust INTEGER NOT NULL DEFAULT 3,
  name VARCHAR(250) NOT NULL,
  email VARCHAR(50) NOT NULL,
  phone VARCHAR(20) NOT NULL,
  password VARCHAR(30) NOT NULL,
  PRIMARY KEY (idUser),
  FOREIGN KEY (idUserTrust) REFERENCES gers.userTrust(idUserTrust)
);

/*********************************************************** TABLES RELATED TO VEHICLES ***********************************************/
CREATE TABLE gers.vehicleTypes ( 
  idVehicleType INTEGER NOT NULL AUTO_INCREMENT, 
  description VARCHAR(20) NOT NULL,
  PRIMARY KEY (idVehicleType)
);

CREATE TABLE gers.engineTypes ( 
  idEngineType INTEGER NOT NULL AUTO_INCREMENT, 
  description VARCHAR(20) NOT NULL,
  PRIMARY KEY (idEngineType)
);

CREATE TABLE gers.brands ( 
  idBrand INTEGER NOT NULL AUTO_INCREMENT, 
  description VARCHAR(20) NOT NULL,
  PRIMARY KEY (idBrand)
);

CREATE TABLE gers.vehicleDetails ( 
  idVehicleDetail INTEGER NOT NULL AUTO_INCREMENT, 
  idUser INTEGER NOT NULL,
  idVehicleType INTEGER NOT NULL,
  idEngineType INTEGER NOT NULL,
  idBrand INTEGER NOT NULL,
  name VARCHAR(20) NOT NULL,
  license VARCHAR(20) NOT NULL,
  PRIMARY KEY (idVehicleDetail),
  FOREIGN KEY (idUser) REFERENCES gers.users(idUser),
  FOREIGN KEY (idVehicleType) REFERENCES gers.vehicleTypes(idVehicleType),
  FOREIGN KEY (idEngineType) REFERENCES gers.engineTypes(idEngineType),
  FOREIGN KEY (idBrand) REFERENCES gers.brands(idBrand)
);

/******************************************************** TABLES RELATED TO BOOKINGS ***********************************************/

CREATE TABLE gers.services ( 
  idService INTEGER NOT NULL AUTO_INCREMENT, 
  description VARCHAR(20) NOT NULL,
  price DECIMAL(6,2) NOT NULL,
  PRIMARY KEY (idService)
);

/*************************** INSERT 10 DEFAULT SERVICES ***************/

CREATE TABLE gers.itens ( 
  idItem INTEGER NOT NULL AUTO_INCREMENT, 
  description VARCHAR(50) NOT NULL,
  cost DECIMAL(6,2) NOT NULL,
  sellPrice DECIMAL(6,2) NOT NULL,
  qtd INTEGER NOT NULL DEFAULT 0,
  PRIMARY KEY (idItem)
);

CREATE TABLE gers.relationItemServce ( 
  idRelationIS INTEGER NOT NULL AUTO_INCREMENT, 
  idItem INTEGER NOT NULL,
  idService INTEGER NOT NULL,
  PRIMARY KEY (idRelationIS),
  FOREIGN KEY (idItem) REFERENCES gers.itens(idItem),
  FOREIGN KEY (idService) REFERENCES gers.services(idService)
);

CREATE TABLE gers.bookingStatus ( 
  idBookingStatus INTEGER NOT NULL AUTO_INCREMENT, 
  description VARCHAR(30) NOT NULL,
  PRIMARY KEY (idBookingStatus)
);

/*************************** INSERT DEFAULT BOOKING STATUS ************/

CREATE TABLE gers.bookingTypes ( 
  idBookingType INTEGER NOT NULL AUTO_INCREMENT, 
  description VARCHAR(50) NOT NULL,
  workHours INTEGER NOT NULL,
  PRIMARY KEY (idBookingType)
);

CREATE TABLE gers.relationVehicleBookingTypes ( 
  idRelationVB INTEGER NOT NULL AUTO_INCREMENT, 
  idVehicleType INTEGER NOT NULL,
  idBookingType INTEGER NOT NULL,
  price DECIMAL(6,2) NOT NULL,
  PRIMARY KEY (idRelationVB),
  FOREIGN KEY (idVehicleType) REFERENCES gers.vehicleTypes(idVehicleType),
  FOREIGN KEY (idBookingType) REFERENCES gers.bookingTypes(idBookingType)
);

CREATE TABLE gers.bookings ( 
  idBooking INTEGER NOT NULL AUTO_INCREMENT, 
  idClient INTEGER NOT NULL,
  idStaff INTEGER NOT NULL DEFAULT 1,
  idVehicleDetail INTEGER NOT NULL,
  idBookingType INTEGER NOT NULL,
  idBookingStatus INTEGER NOT NULL DEFAULT 1,
  date DATE NOT NULL,
  time TIME NOT NULL,
  coments VARCHAR(500) NOT NULL,
  PRIMARY KEY (idBooking),
  FOREIGN KEY (idClient) REFERENCES gers.users(idUser),
  FOREIGN KEY (idStaff) REFERENCES gers.users(idUser),
  FOREIGN KEY (idVehicleDetail) REFERENCES gers.vehicleDetails(idVehicleDetail),
  FOREIGN KEY (idBookingType) REFERENCES gers.bookingTypes(idBookingType),
  FOREIGN KEY (idBookingStatus) REFERENCES gers.bookingStatus(idBookingStatus)
);

CREATE TABLE gers.relationBookingStaff ( 
  idRelationBS INTEGER NOT NULL AUTO_INCREMENT, 
  idStaff INTEGER NOT NULL,
  idBooking INTEGER NOT NULL,
  PRIMARY KEY (idRelationBS),
  FOREIGN KEY (idStaff) REFERENCES gers.users(idUser),
  FOREIGN KEY (idBooking) REFERENCES gers.bookings(idBooking)
);


/*************************** INSERT DEFAULT USER TRUST ***************/
insert into gers.userTrust(description) values
("Administrator"),
("Staff"),
("Customer")
;

/*************************** INSERT GER AS AN ADMIN USER ***************/
insert into gers.users(idUserTrust,name,email,phone,password) values
(1,"Ger","ger@gersgarage.com","0851234567","123456@As");

/*************************** INSERT DEFAULT VEHICLE TYPES ***************/
insert into gers.vehicleTypes(description) values
("Car"),
("Motorbike"),
("Small Bus"),
("Small Van")
;

/*************************** INSERT DEFAULT ENGINE TYPES ***************/
insert into gers.engineTypes(description) values
("Diesel"),
("Petrol"),
("Hybrid"),
("Eletric")
;

/*************************** INSERT 30 DEFAULT BRANDS ******************/
insert into gers.brands(description) values
("Acura"), ("Alfa Romeo"), ("Audi"), ("BMW"), ("Bentley"),
("Buick"), ("Cadillac"), ("Chevrolet"), ("GMC"), ("Honda"),
("Hyundai"), ("Infiniti"), ("Jaguar"), ("Jeep"), ("Mitsubishi"),
("Porsche"), ("Tesla"), ("Toyota"), ("Volkswagen"), ("Volvo"),
("Triumph"), ("KTM"), ("Ford"), ("Fiat"), ("Mercedes-Benz"),
("Nissan"), ("Yamaha"), ("Suzuki"), ("Kawasaki"), ("Ducati")
;

/*************************** INSERT 40 DEFAULT ITENS *****************/
insert into gers.itens(description,cost,sellPrice,qtd) values
("Engine oil", 10, 20, 1),
("Transmission fluid", 10, 20, 1),
("Coolant", 10, 20, 1),
("Brake fluid", 5, 10, 1),
("Power steering fluid", 5, 10, 1),
("Engine air filter", 10, 20, 1),
("Cabin air filter", 10, 20, 1),
("Fuel filter", 10, 20, 1),
("Throttle body cleaner", 10, 20, 1),
("Engine degreaser", 10, 20, 1),
("Brake cleaner", 5, 10, 1),
("Windshield wiper fluid", 5, 10, 1),
("Engine oil filter", 5, 10, 1),
("Transmission filter", 10, 20, 1),
("Fuel pump", 50, 100, 1),
("Fuel pump strainer", 10, 20, 1),
("Fuel pump relay", 10, 20, 1),
("Fuel pump pressure regulator", 10, 20, 1),
("Fuel pump repair kit", 20, 40, 1),
("Fuel pump gasket", 5, 10, 1),
("Fuel pump hose", 5, 10, 1),
("Fuel pump inlet strainer", 5, 10, 1),
("Fuel pump mounting kit", 10, 20, 1),
("Fuel pump pressure sensor", 10, 20, 1),
("Fuel pump sender unit", 50, 100, 1),
("Fuel pump strainer gasket", 5, 10, 1),
("Fuel pump strainer mounting kit", 10, 20, 1),
("Fuel pump strainer seal", 5, 10, 1),
("Fuel pump mounting gasket", 5, 10, 1),
("Fuel pump mounting seal", 5, 10, 1),
("Fuel pump mounting O-ring", 5, 10, 1),
("Fuel pump mounting clip", 5, 10, 1),
("Fuel pump mounting bracket", 10, 20, 1),
("Fuel pump mounting hardware kit", 10, 20, 1),
("Fuel pump wiring harness", 10, 20, 1),
("Fuel pump wiring harness repair kit", 20, 40, 1),
("Fuel pump wiring harness connector", 5, 10, 1),
("Fuel pump wiring harness seal", 5, 10, 1),
("Fuel pump wiring harness clip", 5, 10, 1),
("Fuel pump wiring harness grommet", 5, 10, 1),
("Fuel pump wiring harness insulation", 5, 10, 1)
;

/*************************** INSERT DEFAULT BOOKING STATUS ************/

insert into gers.bookingStatus(description) values
("Booked"),
("In Service"),
("Fixed"),
("Collected"),
("Unrepailable")
;

/*** INSERT DEFAULT BOOKING TYPES ***/
insert into gers.bookingTypes(description,workHours) values
("Annual Service",2),
("Major Service",2),
("Repair or Fault",2),
("Major Repair",4)
;

/*************************** INSERT DEFAULT PRICES FOR BOOKINGS ***************/
insert into gers.relationVehicleBookingTypes(idVehicleType,idBookingType,price) values
(1,1,200),(1,2,260),(1,3,150),(1,4,400),
(2,1,150),(2,2,200),(2,3,100),(2,4,350),
(3,1,300),(3,2,360),(3,3,250),(3,4,500),
(4,1,250),(4,2,300),(4,3,200),(4,4,450)
;

